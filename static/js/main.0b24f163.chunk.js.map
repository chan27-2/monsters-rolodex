{"version":3,"sources":["ui-components/card/card.component.jsx","ui-components/card-list/card-list.component.jsx","ui-components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","MonsterCard","mns","map","m","SearchBox","type","placeholder","onChange","Main","handleChange","e","setState","searchField","target","value","state","users","fetch","then","res","json","f","this","filter","user","toLowerCase","includes","Component","reportWebVitals","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAEaA,EAAO,SAACC,GAAD,OAClB,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEL,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCNTC,EAAc,SAACR,GAAD,OACzB,qBAAKC,UAAU,YAAf,SACGD,EAAMS,IAAIC,KAAI,SAACC,GAAD,OACb,cAAC,EAAD,CAAiBP,QAASO,GAAfA,EAAEN,UCJNO,G,MAAY,SAACZ,GAAD,OACvB,uBACEC,UAAU,SACVY,KAAK,SACLC,YAAad,EAAMc,YACnBC,SAAUf,EAAMe,aCqCLC,E,kDArCb,aAAe,IAAD,8BACZ,gBAaFC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXC,MAAO,GACPJ,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBK,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACF,GAAD,OAAW,EAAKL,SAAS,CAAEK,MAAOA,S,oBAO5C,WAAU,IAAD,OAEDK,EADYC,KAAKP,MAAfC,MACQO,QAAO,SAACC,GAAD,OACrBA,EAAK1B,KAAK2B,cAAcC,SAAS,EAAKX,MAAMH,YAAYa,kBAG1D,OACE,sBAAKhC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEa,YAAY,kBACZC,SAAUe,KAAKb,eAEjB,cAAC,EAAD,CAAaR,IAAKoB,W,GAhCPM,aCMJC,EAZS,SAACpC,GACnBA,GAASA,aAAiBqC,UAC5B,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOtC,GACPuC,EAAOvC,GACPwC,EAAOxC,GACPyC,EAAOzC,GACP0C,EAAQ1C,OCDd2C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.0b24f163.chunk.js","sourcesContent":["import \"../card/card.styles.css\";\n\nexport const Card = (props) => (\n  <div className=\"card-container\">\n    <img\n      alt=\"monster\"\n      src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\n    />\n    <h2>{props.monster.name}</h2>\n    <p>{props.monster.email}</p>\n  </div>\n);\n","import \"./card-list.styles.css\";\nimport { Card } from \"../card/card.component\";\n\nexport const MonsterCard = (props) => (\n  <div className=\"card-list\">\n    {props.mns.map((m) => (\n      <Card key={m.id} monster={m} />\n    ))}\n  </div>\n);\n","import \"../search-box/search-box.styles.css\";\n\nexport const SearchBox = (props) => (\n  <input\n    className=\"search\"\n    type=\"search\"\n    placeholder={props.placeholder}\n    onChange={props.onChange}\n  ></input>\n);\n","import React, { Component } from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { MonsterCard } from \"./ui-components/card-list/card-list.component\";\nimport { SearchBox } from \"./ui-components/search-box/search-box.component\";\n\nclass Main extends Component {\n  constructor() {\n    super();\n    this.state = {\n      users: [],\n      searchField: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => res.json())\n      .then((users) => this.setState({ users: users }));\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  render() {\n    const { users } = this.state;\n    const f = users.filter((user) =>\n      user.name.toLowerCase().includes(this.state.searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder=\"search monsters\"\n          onChange={this.handleChange}\n        ></SearchBox>\n        <MonsterCard mns={f} />\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","const reportWebVitals = (props) => {\n  if (props && props instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(props);\n      getFID(props);\n      getFCP(props);\n      getLCP(props);\n      getTTFB(props);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Main from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}